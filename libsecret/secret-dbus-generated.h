/*
 * Generated by gdbus-codegen 2.39.0. DO NOT EDIT.
 *
 * The license of this code is the same as for the source it was derived from.
 */

#ifndef __SECRET_DBUS_GENERATED_H__
#define __SECRET_DBUS_GENERATED_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for org.freedesktop.Secret.Service */

#define SECRET_GEN_TYPE_SERVICE (_secret_gen_service_get_type ())
#define SECRET_GEN_SERVICE(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), SECRET_GEN_TYPE_SERVICE, SecretGenService))
#define SECRET_GEN_IS_SERVICE(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), SECRET_GEN_TYPE_SERVICE))
#define SECRET_GEN_SERVICE_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), SECRET_GEN_TYPE_SERVICE, SecretGenServiceIface))

struct _SecretGenService;
typedef struct _SecretGenService SecretGenService;
typedef struct _SecretGenServiceIface SecretGenServiceIface;

struct _SecretGenServiceIface
{
  GTypeInterface parent_iface;



  gboolean (*handle_create_collection) (
    SecretGenService *object,
    GDBusMethodInvocation *invocation,
    GVariant *arg_properties,
    const gchar *arg_alias);

  gboolean (*handle_get_secrets) (
    SecretGenService *object,
    GDBusMethodInvocation *invocation,
    const gchar *const *arg_items,
    const gchar *arg_session);

  gboolean (*handle_lock) (
    SecretGenService *object,
    GDBusMethodInvocation *invocation,
    const gchar *const *arg_objects);

  gboolean (*handle_open_session) (
    SecretGenService *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_algorithm,
    GVariant *arg_input);

  gboolean (*handle_read_alias) (
    SecretGenService *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_name);

  gboolean (*handle_search_items) (
    SecretGenService *object,
    GDBusMethodInvocation *invocation,
    GVariant *arg_attributes);

  gboolean (*handle_set_alias) (
    SecretGenService *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_name,
    const gchar *arg_collection);

  gboolean (*handle_unlock) (
    SecretGenService *object,
    GDBusMethodInvocation *invocation,
    const gchar *const *arg_objects);

  const gchar *const * (*get_collections) (SecretGenService *object);

  void (*collection_changed) (
    SecretGenService *object,
    const gchar *arg_collection);

  void (*collection_created) (
    SecretGenService *object,
    const gchar *arg_collection);

  void (*collection_deleted) (
    SecretGenService *object,
    const gchar *arg_collection);

};

GType _secret_gen_service_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *_secret_gen_service_interface_info (void);
guint _secret_gen_service_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void _secret_gen_service_complete_open_session (
    SecretGenService *object,
    GDBusMethodInvocation *invocation,
    GVariant *output,
    const gchar *result);

void _secret_gen_service_complete_create_collection (
    SecretGenService *object,
    GDBusMethodInvocation *invocation,
    const gchar *collection,
    const gchar *prompt);

void _secret_gen_service_complete_search_items (
    SecretGenService *object,
    GDBusMethodInvocation *invocation,
    const gchar *const *unlocked,
    const gchar *const *locked);

void _secret_gen_service_complete_unlock (
    SecretGenService *object,
    GDBusMethodInvocation *invocation,
    const gchar *const *unlocked,
    const gchar *prompt);

void _secret_gen_service_complete_lock (
    SecretGenService *object,
    GDBusMethodInvocation *invocation,
    const gchar *const *locked,
    const gchar *Prompt);

void _secret_gen_service_complete_get_secrets (
    SecretGenService *object,
    GDBusMethodInvocation *invocation,
    GVariant *secrets);

void _secret_gen_service_complete_read_alias (
    SecretGenService *object,
    GDBusMethodInvocation *invocation,
    const gchar *collection);

void _secret_gen_service_complete_set_alias (
    SecretGenService *object,
    GDBusMethodInvocation *invocation);



/* D-Bus signal emissions functions: */
void _secret_gen_service_emit_collection_created (
    SecretGenService *object,
    const gchar *arg_collection);

void _secret_gen_service_emit_collection_deleted (
    SecretGenService *object,
    const gchar *arg_collection);

void _secret_gen_service_emit_collection_changed (
    SecretGenService *object,
    const gchar *arg_collection);



/* D-Bus method calls: */
void _secret_gen_service_call_open_session (
    SecretGenService *proxy,
    const gchar *arg_algorithm,
    GVariant *arg_input,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean _secret_gen_service_call_open_session_finish (
    SecretGenService *proxy,
    GVariant **out_output,
    gchar **out_result,
    GAsyncResult *res,
    GError **error);

gboolean _secret_gen_service_call_open_session_sync (
    SecretGenService *proxy,
    const gchar *arg_algorithm,
    GVariant *arg_input,
    GVariant **out_output,
    gchar **out_result,
    GCancellable *cancellable,
    GError **error);

void _secret_gen_service_call_create_collection (
    SecretGenService *proxy,
    GVariant *arg_properties,
    const gchar *arg_alias,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean _secret_gen_service_call_create_collection_finish (
    SecretGenService *proxy,
    gchar **out_collection,
    gchar **out_prompt,
    GAsyncResult *res,
    GError **error);

gboolean _secret_gen_service_call_create_collection_sync (
    SecretGenService *proxy,
    GVariant *arg_properties,
    const gchar *arg_alias,
    gchar **out_collection,
    gchar **out_prompt,
    GCancellable *cancellable,
    GError **error);

void _secret_gen_service_call_search_items (
    SecretGenService *proxy,
    GVariant *arg_attributes,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean _secret_gen_service_call_search_items_finish (
    SecretGenService *proxy,
    gchar ***out_unlocked,
    gchar ***out_locked,
    GAsyncResult *res,
    GError **error);

gboolean _secret_gen_service_call_search_items_sync (
    SecretGenService *proxy,
    GVariant *arg_attributes,
    gchar ***out_unlocked,
    gchar ***out_locked,
    GCancellable *cancellable,
    GError **error);

void _secret_gen_service_call_unlock (
    SecretGenService *proxy,
    const gchar *const *arg_objects,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean _secret_gen_service_call_unlock_finish (
    SecretGenService *proxy,
    gchar ***out_unlocked,
    gchar **out_prompt,
    GAsyncResult *res,
    GError **error);

gboolean _secret_gen_service_call_unlock_sync (
    SecretGenService *proxy,
    const gchar *const *arg_objects,
    gchar ***out_unlocked,
    gchar **out_prompt,
    GCancellable *cancellable,
    GError **error);

void _secret_gen_service_call_lock (
    SecretGenService *proxy,
    const gchar *const *arg_objects,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean _secret_gen_service_call_lock_finish (
    SecretGenService *proxy,
    gchar ***out_locked,
    gchar **out_Prompt,
    GAsyncResult *res,
    GError **error);

gboolean _secret_gen_service_call_lock_sync (
    SecretGenService *proxy,
    const gchar *const *arg_objects,
    gchar ***out_locked,
    gchar **out_Prompt,
    GCancellable *cancellable,
    GError **error);

void _secret_gen_service_call_get_secrets (
    SecretGenService *proxy,
    const gchar *const *arg_items,
    const gchar *arg_session,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean _secret_gen_service_call_get_secrets_finish (
    SecretGenService *proxy,
    GVariant **out_secrets,
    GAsyncResult *res,
    GError **error);

gboolean _secret_gen_service_call_get_secrets_sync (
    SecretGenService *proxy,
    const gchar *const *arg_items,
    const gchar *arg_session,
    GVariant **out_secrets,
    GCancellable *cancellable,
    GError **error);

void _secret_gen_service_call_read_alias (
    SecretGenService *proxy,
    const gchar *arg_name,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean _secret_gen_service_call_read_alias_finish (
    SecretGenService *proxy,
    gchar **out_collection,
    GAsyncResult *res,
    GError **error);

gboolean _secret_gen_service_call_read_alias_sync (
    SecretGenService *proxy,
    const gchar *arg_name,
    gchar **out_collection,
    GCancellable *cancellable,
    GError **error);

void _secret_gen_service_call_set_alias (
    SecretGenService *proxy,
    const gchar *arg_name,
    const gchar *arg_collection,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean _secret_gen_service_call_set_alias_finish (
    SecretGenService *proxy,
    GAsyncResult *res,
    GError **error);

gboolean _secret_gen_service_call_set_alias_sync (
    SecretGenService *proxy,
    const gchar *arg_name,
    const gchar *arg_collection,
    GCancellable *cancellable,
    GError **error);



/* D-Bus property accessors: */
const gchar *const *_secret_gen_service_get_collections (SecretGenService *object);
gchar **_secret_gen_service_dup_collections (SecretGenService *object);
void _secret_gen_service_set_collections (SecretGenService *object, const gchar *const *value);


/* ---- */

#define SECRET_GEN_TYPE_SERVICE_PROXY (_secret_gen_service_proxy_get_type ())
#define SECRET_GEN_SERVICE_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), SECRET_GEN_TYPE_SERVICE_PROXY, SecretGenServiceProxy))
#define SECRET_GEN_SERVICE_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), SECRET_GEN_TYPE_SERVICE_PROXY, SecretGenServiceProxyClass))
#define SECRET_GEN_SERVICE_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), SECRET_GEN_TYPE_SERVICE_PROXY, SecretGenServiceProxyClass))
#define SECRET_GEN_IS_SERVICE_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), SECRET_GEN_TYPE_SERVICE_PROXY))
#define SECRET_GEN_IS_SERVICE_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), SECRET_GEN_TYPE_SERVICE_PROXY))

typedef struct _SecretGenServiceProxy SecretGenServiceProxy;
typedef struct _SecretGenServiceProxyClass SecretGenServiceProxyClass;
typedef struct _SecretGenServiceProxyPrivate SecretGenServiceProxyPrivate;

struct _SecretGenServiceProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  SecretGenServiceProxyPrivate *priv;
};

struct _SecretGenServiceProxyClass
{
  GDBusProxyClass parent_class;
};

GType _secret_gen_service_proxy_get_type (void) G_GNUC_CONST;

void _secret_gen_service_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
SecretGenService *_secret_gen_service_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
SecretGenService *_secret_gen_service_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void _secret_gen_service_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
SecretGenService *_secret_gen_service_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
SecretGenService *_secret_gen_service_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define SECRET_GEN_TYPE_SERVICE_SKELETON (_secret_gen_service_skeleton_get_type ())
#define SECRET_GEN_SERVICE_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), SECRET_GEN_TYPE_SERVICE_SKELETON, SecretGenServiceSkeleton))
#define SECRET_GEN_SERVICE_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), SECRET_GEN_TYPE_SERVICE_SKELETON, SecretGenServiceSkeletonClass))
#define SECRET_GEN_SERVICE_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), SECRET_GEN_TYPE_SERVICE_SKELETON, SecretGenServiceSkeletonClass))
#define SECRET_GEN_IS_SERVICE_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), SECRET_GEN_TYPE_SERVICE_SKELETON))
#define SECRET_GEN_IS_SERVICE_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), SECRET_GEN_TYPE_SERVICE_SKELETON))

typedef struct _SecretGenServiceSkeleton SecretGenServiceSkeleton;
typedef struct _SecretGenServiceSkeletonClass SecretGenServiceSkeletonClass;
typedef struct _SecretGenServiceSkeletonPrivate SecretGenServiceSkeletonPrivate;

struct _SecretGenServiceSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  SecretGenServiceSkeletonPrivate *priv;
};

struct _SecretGenServiceSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType _secret_gen_service_skeleton_get_type (void) G_GNUC_CONST;

SecretGenService *_secret_gen_service_skeleton_new (void);


/* ------------------------------------------------------------------------ */
/* Declarations for org.freedesktop.Secret.Collection */

#define SECRET_GEN_TYPE_COLLECTION (_secret_gen_collection_get_type ())
#define SECRET_GEN_COLLECTION(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), SECRET_GEN_TYPE_COLLECTION, SecretGenCollection))
#define SECRET_GEN_IS_COLLECTION(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), SECRET_GEN_TYPE_COLLECTION))
#define SECRET_GEN_COLLECTION_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), SECRET_GEN_TYPE_COLLECTION, SecretGenCollectionIface))

struct _SecretGenCollection;
typedef struct _SecretGenCollection SecretGenCollection;
typedef struct _SecretGenCollectionIface SecretGenCollectionIface;

struct _SecretGenCollectionIface
{
  GTypeInterface parent_iface;



  gboolean (*handle_create_item) (
    SecretGenCollection *object,
    GDBusMethodInvocation *invocation,
    GVariant *arg_properties,
    GVariant *arg_secret,
    gboolean arg_replace);

  gboolean (*handle_delete) (
    SecretGenCollection *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_search_items) (
    SecretGenCollection *object,
    GDBusMethodInvocation *invocation,
    GVariant *arg_attributes);

  guint64  (*get_created) (SecretGenCollection *object);

  const gchar *const * (*get_items) (SecretGenCollection *object);

  const gchar * (*get_label) (SecretGenCollection *object);

  gboolean  (*get_locked) (SecretGenCollection *object);

  guint64  (*get_modified) (SecretGenCollection *object);

  void (*item_changed) (
    SecretGenCollection *object,
    const gchar *arg_item);

  void (*item_created) (
    SecretGenCollection *object,
    const gchar *arg_item);

  void (*item_deleted) (
    SecretGenCollection *object,
    const gchar *arg_item);

};

GType _secret_gen_collection_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *_secret_gen_collection_interface_info (void);
guint _secret_gen_collection_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void _secret_gen_collection_complete_delete (
    SecretGenCollection *object,
    GDBusMethodInvocation *invocation,
    const gchar *prompt);

void _secret_gen_collection_complete_search_items (
    SecretGenCollection *object,
    GDBusMethodInvocation *invocation,
    const gchar *const *results);

void _secret_gen_collection_complete_create_item (
    SecretGenCollection *object,
    GDBusMethodInvocation *invocation,
    const gchar *item,
    const gchar *prompt);



/* D-Bus signal emissions functions: */
void _secret_gen_collection_emit_item_created (
    SecretGenCollection *object,
    const gchar *arg_item);

void _secret_gen_collection_emit_item_deleted (
    SecretGenCollection *object,
    const gchar *arg_item);

void _secret_gen_collection_emit_item_changed (
    SecretGenCollection *object,
    const gchar *arg_item);



/* D-Bus method calls: */
void _secret_gen_collection_call_delete (
    SecretGenCollection *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean _secret_gen_collection_call_delete_finish (
    SecretGenCollection *proxy,
    gchar **out_prompt,
    GAsyncResult *res,
    GError **error);

gboolean _secret_gen_collection_call_delete_sync (
    SecretGenCollection *proxy,
    gchar **out_prompt,
    GCancellable *cancellable,
    GError **error);

void _secret_gen_collection_call_search_items (
    SecretGenCollection *proxy,
    GVariant *arg_attributes,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean _secret_gen_collection_call_search_items_finish (
    SecretGenCollection *proxy,
    gchar ***out_results,
    GAsyncResult *res,
    GError **error);

gboolean _secret_gen_collection_call_search_items_sync (
    SecretGenCollection *proxy,
    GVariant *arg_attributes,
    gchar ***out_results,
    GCancellable *cancellable,
    GError **error);

void _secret_gen_collection_call_create_item (
    SecretGenCollection *proxy,
    GVariant *arg_properties,
    GVariant *arg_secret,
    gboolean arg_replace,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean _secret_gen_collection_call_create_item_finish (
    SecretGenCollection *proxy,
    gchar **out_item,
    gchar **out_prompt,
    GAsyncResult *res,
    GError **error);

gboolean _secret_gen_collection_call_create_item_sync (
    SecretGenCollection *proxy,
    GVariant *arg_properties,
    GVariant *arg_secret,
    gboolean arg_replace,
    gchar **out_item,
    gchar **out_prompt,
    GCancellable *cancellable,
    GError **error);



/* D-Bus property accessors: */
const gchar *const *_secret_gen_collection_get_items (SecretGenCollection *object);
gchar **_secret_gen_collection_dup_items (SecretGenCollection *object);
void _secret_gen_collection_set_items (SecretGenCollection *object, const gchar *const *value);

const gchar *_secret_gen_collection_get_label (SecretGenCollection *object);
gchar *_secret_gen_collection_dup_label (SecretGenCollection *object);
void _secret_gen_collection_set_label (SecretGenCollection *object, const gchar *value);

gboolean _secret_gen_collection_get_locked (SecretGenCollection *object);
void _secret_gen_collection_set_locked (SecretGenCollection *object, gboolean value);

guint64 _secret_gen_collection_get_created (SecretGenCollection *object);
void _secret_gen_collection_set_created (SecretGenCollection *object, guint64 value);

guint64 _secret_gen_collection_get_modified (SecretGenCollection *object);
void _secret_gen_collection_set_modified (SecretGenCollection *object, guint64 value);


/* ---- */

#define SECRET_GEN_TYPE_COLLECTION_PROXY (_secret_gen_collection_proxy_get_type ())
#define SECRET_GEN_COLLECTION_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), SECRET_GEN_TYPE_COLLECTION_PROXY, SecretGenCollectionProxy))
#define SECRET_GEN_COLLECTION_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), SECRET_GEN_TYPE_COLLECTION_PROXY, SecretGenCollectionProxyClass))
#define SECRET_GEN_COLLECTION_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), SECRET_GEN_TYPE_COLLECTION_PROXY, SecretGenCollectionProxyClass))
#define SECRET_GEN_IS_COLLECTION_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), SECRET_GEN_TYPE_COLLECTION_PROXY))
#define SECRET_GEN_IS_COLLECTION_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), SECRET_GEN_TYPE_COLLECTION_PROXY))

typedef struct _SecretGenCollectionProxy SecretGenCollectionProxy;
typedef struct _SecretGenCollectionProxyClass SecretGenCollectionProxyClass;
typedef struct _SecretGenCollectionProxyPrivate SecretGenCollectionProxyPrivate;

struct _SecretGenCollectionProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  SecretGenCollectionProxyPrivate *priv;
};

struct _SecretGenCollectionProxyClass
{
  GDBusProxyClass parent_class;
};

GType _secret_gen_collection_proxy_get_type (void) G_GNUC_CONST;

void _secret_gen_collection_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
SecretGenCollection *_secret_gen_collection_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
SecretGenCollection *_secret_gen_collection_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void _secret_gen_collection_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
SecretGenCollection *_secret_gen_collection_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
SecretGenCollection *_secret_gen_collection_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define SECRET_GEN_TYPE_COLLECTION_SKELETON (_secret_gen_collection_skeleton_get_type ())
#define SECRET_GEN_COLLECTION_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), SECRET_GEN_TYPE_COLLECTION_SKELETON, SecretGenCollectionSkeleton))
#define SECRET_GEN_COLLECTION_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), SECRET_GEN_TYPE_COLLECTION_SKELETON, SecretGenCollectionSkeletonClass))
#define SECRET_GEN_COLLECTION_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), SECRET_GEN_TYPE_COLLECTION_SKELETON, SecretGenCollectionSkeletonClass))
#define SECRET_GEN_IS_COLLECTION_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), SECRET_GEN_TYPE_COLLECTION_SKELETON))
#define SECRET_GEN_IS_COLLECTION_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), SECRET_GEN_TYPE_COLLECTION_SKELETON))

typedef struct _SecretGenCollectionSkeleton SecretGenCollectionSkeleton;
typedef struct _SecretGenCollectionSkeletonClass SecretGenCollectionSkeletonClass;
typedef struct _SecretGenCollectionSkeletonPrivate SecretGenCollectionSkeletonPrivate;

struct _SecretGenCollectionSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  SecretGenCollectionSkeletonPrivate *priv;
};

struct _SecretGenCollectionSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType _secret_gen_collection_skeleton_get_type (void) G_GNUC_CONST;

SecretGenCollection *_secret_gen_collection_skeleton_new (void);


/* ------------------------------------------------------------------------ */
/* Declarations for org.freedesktop.Secret.Item */

#define SECRET_GEN_TYPE_ITEM (_secret_gen_item_get_type ())
#define SECRET_GEN_ITEM(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), SECRET_GEN_TYPE_ITEM, SecretGenItem))
#define SECRET_GEN_IS_ITEM(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), SECRET_GEN_TYPE_ITEM))
#define SECRET_GEN_ITEM_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), SECRET_GEN_TYPE_ITEM, SecretGenItemIface))

struct _SecretGenItem;
typedef struct _SecretGenItem SecretGenItem;
typedef struct _SecretGenItemIface SecretGenItemIface;

struct _SecretGenItemIface
{
  GTypeInterface parent_iface;


  gboolean (*handle_delete) (
    SecretGenItem *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_get_secret) (
    SecretGenItem *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_session);

  gboolean (*handle_set_secret) (
    SecretGenItem *object,
    GDBusMethodInvocation *invocation,
    GVariant *arg_secret);

  GVariant * (*get_attributes) (SecretGenItem *object);

  guint64  (*get_created) (SecretGenItem *object);

  const gchar * (*get_label) (SecretGenItem *object);

  gboolean  (*get_locked) (SecretGenItem *object);

  guint64  (*get_modified) (SecretGenItem *object);

};

GType _secret_gen_item_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *_secret_gen_item_interface_info (void);
guint _secret_gen_item_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void _secret_gen_item_complete_delete (
    SecretGenItem *object,
    GDBusMethodInvocation *invocation,
    const gchar *Prompt);

void _secret_gen_item_complete_get_secret (
    SecretGenItem *object,
    GDBusMethodInvocation *invocation,
    GVariant *secret);

void _secret_gen_item_complete_set_secret (
    SecretGenItem *object,
    GDBusMethodInvocation *invocation);



/* D-Bus method calls: */
void _secret_gen_item_call_delete (
    SecretGenItem *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean _secret_gen_item_call_delete_finish (
    SecretGenItem *proxy,
    gchar **out_Prompt,
    GAsyncResult *res,
    GError **error);

gboolean _secret_gen_item_call_delete_sync (
    SecretGenItem *proxy,
    gchar **out_Prompt,
    GCancellable *cancellable,
    GError **error);

void _secret_gen_item_call_get_secret (
    SecretGenItem *proxy,
    const gchar *arg_session,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean _secret_gen_item_call_get_secret_finish (
    SecretGenItem *proxy,
    GVariant **out_secret,
    GAsyncResult *res,
    GError **error);

gboolean _secret_gen_item_call_get_secret_sync (
    SecretGenItem *proxy,
    const gchar *arg_session,
    GVariant **out_secret,
    GCancellable *cancellable,
    GError **error);

void _secret_gen_item_call_set_secret (
    SecretGenItem *proxy,
    GVariant *arg_secret,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean _secret_gen_item_call_set_secret_finish (
    SecretGenItem *proxy,
    GAsyncResult *res,
    GError **error);

gboolean _secret_gen_item_call_set_secret_sync (
    SecretGenItem *proxy,
    GVariant *arg_secret,
    GCancellable *cancellable,
    GError **error);



/* D-Bus property accessors: */
gboolean _secret_gen_item_get_locked (SecretGenItem *object);
void _secret_gen_item_set_locked (SecretGenItem *object, gboolean value);

GVariant *_secret_gen_item_get_attributes (SecretGenItem *object);
GVariant *_secret_gen_item_dup_attributes (SecretGenItem *object);
void _secret_gen_item_set_attributes (SecretGenItem *object, GVariant *value);

const gchar *_secret_gen_item_get_label (SecretGenItem *object);
gchar *_secret_gen_item_dup_label (SecretGenItem *object);
void _secret_gen_item_set_label (SecretGenItem *object, const gchar *value);

guint64 _secret_gen_item_get_created (SecretGenItem *object);
void _secret_gen_item_set_created (SecretGenItem *object, guint64 value);

guint64 _secret_gen_item_get_modified (SecretGenItem *object);
void _secret_gen_item_set_modified (SecretGenItem *object, guint64 value);


/* ---- */

#define SECRET_GEN_TYPE_ITEM_PROXY (_secret_gen_item_proxy_get_type ())
#define SECRET_GEN_ITEM_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), SECRET_GEN_TYPE_ITEM_PROXY, SecretGenItemProxy))
#define SECRET_GEN_ITEM_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), SECRET_GEN_TYPE_ITEM_PROXY, SecretGenItemProxyClass))
#define SECRET_GEN_ITEM_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), SECRET_GEN_TYPE_ITEM_PROXY, SecretGenItemProxyClass))
#define SECRET_GEN_IS_ITEM_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), SECRET_GEN_TYPE_ITEM_PROXY))
#define SECRET_GEN_IS_ITEM_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), SECRET_GEN_TYPE_ITEM_PROXY))

typedef struct _SecretGenItemProxy SecretGenItemProxy;
typedef struct _SecretGenItemProxyClass SecretGenItemProxyClass;
typedef struct _SecretGenItemProxyPrivate SecretGenItemProxyPrivate;

struct _SecretGenItemProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  SecretGenItemProxyPrivate *priv;
};

struct _SecretGenItemProxyClass
{
  GDBusProxyClass parent_class;
};

GType _secret_gen_item_proxy_get_type (void) G_GNUC_CONST;

void _secret_gen_item_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
SecretGenItem *_secret_gen_item_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
SecretGenItem *_secret_gen_item_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void _secret_gen_item_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
SecretGenItem *_secret_gen_item_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
SecretGenItem *_secret_gen_item_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define SECRET_GEN_TYPE_ITEM_SKELETON (_secret_gen_item_skeleton_get_type ())
#define SECRET_GEN_ITEM_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), SECRET_GEN_TYPE_ITEM_SKELETON, SecretGenItemSkeleton))
#define SECRET_GEN_ITEM_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), SECRET_GEN_TYPE_ITEM_SKELETON, SecretGenItemSkeletonClass))
#define SECRET_GEN_ITEM_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), SECRET_GEN_TYPE_ITEM_SKELETON, SecretGenItemSkeletonClass))
#define SECRET_GEN_IS_ITEM_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), SECRET_GEN_TYPE_ITEM_SKELETON))
#define SECRET_GEN_IS_ITEM_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), SECRET_GEN_TYPE_ITEM_SKELETON))

typedef struct _SecretGenItemSkeleton SecretGenItemSkeleton;
typedef struct _SecretGenItemSkeletonClass SecretGenItemSkeletonClass;
typedef struct _SecretGenItemSkeletonPrivate SecretGenItemSkeletonPrivate;

struct _SecretGenItemSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  SecretGenItemSkeletonPrivate *priv;
};

struct _SecretGenItemSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType _secret_gen_item_skeleton_get_type (void) G_GNUC_CONST;

SecretGenItem *_secret_gen_item_skeleton_new (void);


/* ------------------------------------------------------------------------ */
/* Declarations for org.freedesktop.Secret.Session */

#define SECRET_GEN_TYPE_SESSION (_secret_gen_session_get_type ())
#define SECRET_GEN_SESSION(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), SECRET_GEN_TYPE_SESSION, SecretGenSession))
#define SECRET_GEN_IS_SESSION(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), SECRET_GEN_TYPE_SESSION))
#define SECRET_GEN_SESSION_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), SECRET_GEN_TYPE_SESSION, SecretGenSessionIface))

struct _SecretGenSession;
typedef struct _SecretGenSession SecretGenSession;
typedef struct _SecretGenSessionIface SecretGenSessionIface;

struct _SecretGenSessionIface
{
  GTypeInterface parent_iface;

  gboolean (*handle_close) (
    SecretGenSession *object,
    GDBusMethodInvocation *invocation);

};

GType _secret_gen_session_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *_secret_gen_session_interface_info (void);
guint _secret_gen_session_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void _secret_gen_session_complete_close (
    SecretGenSession *object,
    GDBusMethodInvocation *invocation);



/* D-Bus method calls: */
void _secret_gen_session_call_close (
    SecretGenSession *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean _secret_gen_session_call_close_finish (
    SecretGenSession *proxy,
    GAsyncResult *res,
    GError **error);

gboolean _secret_gen_session_call_close_sync (
    SecretGenSession *proxy,
    GCancellable *cancellable,
    GError **error);



/* ---- */

#define SECRET_GEN_TYPE_SESSION_PROXY (_secret_gen_session_proxy_get_type ())
#define SECRET_GEN_SESSION_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), SECRET_GEN_TYPE_SESSION_PROXY, SecretGenSessionProxy))
#define SECRET_GEN_SESSION_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), SECRET_GEN_TYPE_SESSION_PROXY, SecretGenSessionProxyClass))
#define SECRET_GEN_SESSION_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), SECRET_GEN_TYPE_SESSION_PROXY, SecretGenSessionProxyClass))
#define SECRET_GEN_IS_SESSION_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), SECRET_GEN_TYPE_SESSION_PROXY))
#define SECRET_GEN_IS_SESSION_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), SECRET_GEN_TYPE_SESSION_PROXY))

typedef struct _SecretGenSessionProxy SecretGenSessionProxy;
typedef struct _SecretGenSessionProxyClass SecretGenSessionProxyClass;
typedef struct _SecretGenSessionProxyPrivate SecretGenSessionProxyPrivate;

struct _SecretGenSessionProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  SecretGenSessionProxyPrivate *priv;
};

struct _SecretGenSessionProxyClass
{
  GDBusProxyClass parent_class;
};

GType _secret_gen_session_proxy_get_type (void) G_GNUC_CONST;

void _secret_gen_session_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
SecretGenSession *_secret_gen_session_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
SecretGenSession *_secret_gen_session_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void _secret_gen_session_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
SecretGenSession *_secret_gen_session_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
SecretGenSession *_secret_gen_session_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define SECRET_GEN_TYPE_SESSION_SKELETON (_secret_gen_session_skeleton_get_type ())
#define SECRET_GEN_SESSION_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), SECRET_GEN_TYPE_SESSION_SKELETON, SecretGenSessionSkeleton))
#define SECRET_GEN_SESSION_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), SECRET_GEN_TYPE_SESSION_SKELETON, SecretGenSessionSkeletonClass))
#define SECRET_GEN_SESSION_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), SECRET_GEN_TYPE_SESSION_SKELETON, SecretGenSessionSkeletonClass))
#define SECRET_GEN_IS_SESSION_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), SECRET_GEN_TYPE_SESSION_SKELETON))
#define SECRET_GEN_IS_SESSION_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), SECRET_GEN_TYPE_SESSION_SKELETON))

typedef struct _SecretGenSessionSkeleton SecretGenSessionSkeleton;
typedef struct _SecretGenSessionSkeletonClass SecretGenSessionSkeletonClass;
typedef struct _SecretGenSessionSkeletonPrivate SecretGenSessionSkeletonPrivate;

struct _SecretGenSessionSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  SecretGenSessionSkeletonPrivate *priv;
};

struct _SecretGenSessionSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType _secret_gen_session_skeleton_get_type (void) G_GNUC_CONST;

SecretGenSession *_secret_gen_session_skeleton_new (void);


/* ------------------------------------------------------------------------ */
/* Declarations for org.freedesktop.Secret.Prompt */

#define SECRET_GEN_TYPE_PROMPT (_secret_gen_prompt_get_type ())
#define SECRET_GEN_PROMPT(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), SECRET_GEN_TYPE_PROMPT, SecretGenPrompt))
#define SECRET_GEN_IS_PROMPT(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), SECRET_GEN_TYPE_PROMPT))
#define SECRET_GEN_PROMPT_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), SECRET_GEN_TYPE_PROMPT, SecretGenPromptIface))

struct _SecretGenPrompt;
typedef struct _SecretGenPrompt SecretGenPrompt;
typedef struct _SecretGenPromptIface SecretGenPromptIface;

struct _SecretGenPromptIface
{
  GTypeInterface parent_iface;


  gboolean (*handle_dismiss) (
    SecretGenPrompt *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_prompt) (
    SecretGenPrompt *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_window_id);

  void (*completed) (
    SecretGenPrompt *object,
    gboolean arg_dismissed,
    GVariant *arg_result);

};

GType _secret_gen_prompt_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *_secret_gen_prompt_interface_info (void);
guint _secret_gen_prompt_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void _secret_gen_prompt_complete_prompt (
    SecretGenPrompt *object,
    GDBusMethodInvocation *invocation);

void _secret_gen_prompt_complete_dismiss (
    SecretGenPrompt *object,
    GDBusMethodInvocation *invocation);



/* D-Bus signal emissions functions: */
void _secret_gen_prompt_emit_completed (
    SecretGenPrompt *object,
    gboolean arg_dismissed,
    GVariant *arg_result);



/* D-Bus method calls: */
void _secret_gen_prompt_call_prompt (
    SecretGenPrompt *proxy,
    const gchar *arg_window_id,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean _secret_gen_prompt_call_prompt_finish (
    SecretGenPrompt *proxy,
    GAsyncResult *res,
    GError **error);

gboolean _secret_gen_prompt_call_prompt_sync (
    SecretGenPrompt *proxy,
    const gchar *arg_window_id,
    GCancellable *cancellable,
    GError **error);

void _secret_gen_prompt_call_dismiss (
    SecretGenPrompt *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean _secret_gen_prompt_call_dismiss_finish (
    SecretGenPrompt *proxy,
    GAsyncResult *res,
    GError **error);

gboolean _secret_gen_prompt_call_dismiss_sync (
    SecretGenPrompt *proxy,
    GCancellable *cancellable,
    GError **error);



/* ---- */

#define SECRET_GEN_TYPE_PROMPT_PROXY (_secret_gen_prompt_proxy_get_type ())
#define SECRET_GEN_PROMPT_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), SECRET_GEN_TYPE_PROMPT_PROXY, SecretGenPromptProxy))
#define SECRET_GEN_PROMPT_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), SECRET_GEN_TYPE_PROMPT_PROXY, SecretGenPromptProxyClass))
#define SECRET_GEN_PROMPT_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), SECRET_GEN_TYPE_PROMPT_PROXY, SecretGenPromptProxyClass))
#define SECRET_GEN_IS_PROMPT_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), SECRET_GEN_TYPE_PROMPT_PROXY))
#define SECRET_GEN_IS_PROMPT_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), SECRET_GEN_TYPE_PROMPT_PROXY))

typedef struct _SecretGenPromptProxy SecretGenPromptProxy;
typedef struct _SecretGenPromptProxyClass SecretGenPromptProxyClass;
typedef struct _SecretGenPromptProxyPrivate SecretGenPromptProxyPrivate;

struct _SecretGenPromptProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  SecretGenPromptProxyPrivate *priv;
};

struct _SecretGenPromptProxyClass
{
  GDBusProxyClass parent_class;
};

GType _secret_gen_prompt_proxy_get_type (void) G_GNUC_CONST;

void _secret_gen_prompt_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
SecretGenPrompt *_secret_gen_prompt_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
SecretGenPrompt *_secret_gen_prompt_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void _secret_gen_prompt_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
SecretGenPrompt *_secret_gen_prompt_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
SecretGenPrompt *_secret_gen_prompt_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define SECRET_GEN_TYPE_PROMPT_SKELETON (_secret_gen_prompt_skeleton_get_type ())
#define SECRET_GEN_PROMPT_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), SECRET_GEN_TYPE_PROMPT_SKELETON, SecretGenPromptSkeleton))
#define SECRET_GEN_PROMPT_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), SECRET_GEN_TYPE_PROMPT_SKELETON, SecretGenPromptSkeletonClass))
#define SECRET_GEN_PROMPT_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), SECRET_GEN_TYPE_PROMPT_SKELETON, SecretGenPromptSkeletonClass))
#define SECRET_GEN_IS_PROMPT_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), SECRET_GEN_TYPE_PROMPT_SKELETON))
#define SECRET_GEN_IS_PROMPT_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), SECRET_GEN_TYPE_PROMPT_SKELETON))

typedef struct _SecretGenPromptSkeleton SecretGenPromptSkeleton;
typedef struct _SecretGenPromptSkeletonClass SecretGenPromptSkeletonClass;
typedef struct _SecretGenPromptSkeletonPrivate SecretGenPromptSkeletonPrivate;

struct _SecretGenPromptSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  SecretGenPromptSkeletonPrivate *priv;
};

struct _SecretGenPromptSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType _secret_gen_prompt_skeleton_get_type (void) G_GNUC_CONST;

SecretGenPrompt *_secret_gen_prompt_skeleton_new (void);


G_END_DECLS

#endif /* __SECRET_DBUS_GENERATED_H__ */
